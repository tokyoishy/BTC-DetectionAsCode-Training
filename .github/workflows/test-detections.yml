name: Test Detection Rules

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML>=6.0 splunk-sdk>=1.6.0 requests>=2.28.0 urllib3>=1.26.0 pysigma pysigma-backend-splunk
        
    - name: Copy required files
      run: |
        # Copy detection_testing_manager.py to current directory for import
        cp tests/detection_testing_manager.py .
        
    - name: Test detection rules
      env:
        SPLUNK_HOST: ${{ secrets.SPLUNK_HOST }}
        SPLUNK_USERNAME: ${{ secrets.SPLUNK_USERNAME }}
        SPLUNK_PASSWORD: ${{ secrets.SPLUNK_PASSWORD }}
        SPLUNK_HEC_TOKEN: ${{ secrets.SPLUNK_HEC_TOKEN }}
      run: |
        # Check if Splunk environment variables are set
        if [ -z "$SPLUNK_HOST" ] || [ -z "$SPLUNK_USERNAME" ] || [ -z "$SPLUNK_PASSWORD" ]; then
          echo "‚ùå Missing required Splunk environment variables."
          echo "Please set the following secrets in your repository:"
          echo "  - SPLUNK_HOST"
          echo "  - SPLUNK_USERNAME" 
          echo "  - SPLUNK_PASSWORD"
          echo ""
          echo "Skipping detection testing..."
          exit 0
        fi
        
        echo "üß™ Running detection tests..."
        python tests/test_detections.py detections
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ github.run_number }}
        path: |
          detections/
        retention-days: 30
        
    - name: Comment on PR
      if: github.event_name == 'pull_request' && failure()
      uses: actions/github-script@v6
      with:
        script: |
          try {
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå Detection tests failed. Please check the test results artifact for details.'
            });
          } catch (error) {
            console.log('Could not create comment (likely due to permissions):', error.message);
            console.log('This is expected when running on forks or with limited permissions.');
          } 

  # false-positive-test:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: success()
    
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4
      
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.11'
        
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install PyYAML>=6.0 splunk-sdk>=1.6.0 requests>=2.28.0 urllib3>=1.26.0 pysigma pysigma-backend-splunk
        
  #   - name: Copy required files
  #     run: |
  #       # Copy detection_testing_manager.py and false_positive_testing.py to current directory for import
  #       cp solutions/lab11_bonus/detection_testing_manager.py .
  #       cp solutions/lab11_bonus/false_positive_testing.py .
        
  #   - name: Test detection rules for false positives
  #     env:
  #       SPLUNK_HOST: ${{ secrets.SPLUNK_HOST }}
  #       SPLUNK_USERNAME: ${{ secrets.SPLUNK_USERNAME }}
  #       SPLUNK_PASSWORD: ${{ secrets.SPLUNK_PASSWORD }}
  #     run: |
  #       # Check if Splunk environment variables are set
  #       if [ -z "$SPLUNK_HOST" ] || [ -z "$SPLUNK_USERNAME" ] || [ -z "$SPLUNK_PASSWORD" ]; then
  #         echo "‚ùå Missing required Splunk environment variables."
  #         echo "Please set the following secrets in your repository:"
  #         echo "  - SPLUNK_HOST"
  #         echo "  - SPLUNK_USERNAME" 
  #         echo "  - SPLUNK_PASSWORD"
  #         echo ""
  #         echo "Skipping false positive testing..."
  #         exit 0
  #       fi
        
  #       echo "üß™ Running false positive tests..."
  #       python false_positive_testing.py detections
        
  #   - name: Upload false positive test results
  #     if: always()
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: false-positive-test-results-${{ github.run_number }}
  #       path: |
  #         detections/validation_results/
  #       retention-days: 30
        
  #   - name: Comment on PR for false positive failures
  #     if: github.event_name == 'pull_request' && failure()
  #     uses: actions/github-script@v6
  #     with:
  #       script: |
  #         try {
  #           await github.rest.issues.createComment({
  #             issue_number: context.payload.pull_request.number,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: '‚ùå False positive tests failed. Some detections triggered false positives. Please check the test results artifact for details.'
  #           });
  #         } catch (error) {
  #           console.log('Could not create comment (likely due to permissions):', error.message);
  #           console.log('This is expected when running on forks or with limited permissions.');
  #         } 